'use client';

/**
 * Dashboard Page
 * Main dashboard view after authentication with optimized desktop layout
 */

import React, { useState } from 'react';
import { useSession, signOut } from 'next-auth/react';
import { useRouter } from 'next/navigation';
import { useKeyboardShortcuts } from '@/lib/utils/keyboard-shortcuts';
import UnifiedNavigation from '@/components/layout/UnifiedNavigation';
import MultiColumnLayout from '@/components/layout/MultiColumnLayout';
import ResponsiveGrid, { ResponsiveGridItem } from '@/components/ui/ResponsiveGrid';
import DashboardCard from '@/components/ui/DashboardCard';

// Recent Activity Component for the sidebar
function RecentActivity() {
  return (
    <div className="space-y-4">
      <h3 className="text-lg font-medium text-gray-900 dark:text-white">Recent Activity</h3>
      
      <div className="space-y-3">
        {[
          { type: 'commit', repo: 'main-app', time: '2 hours ago' },
          { type: 'pr', repo: 'api-service', time: '1 day ago' },
          { type: 'issue', repo: 'ui-components', time: '2 days ago' },
          { type: 'review', repo: 'documentation', time: '3 days ago' },
        ].map((activity, index) => (
          <div 
            key={index}
            className="flex items-start p-3 rounded-md bg-gray-50 dark:bg-gray-800 border border-gray-200 dark:border-gray-700"
          >
            <div className="mr-3 mt-0.5">
              {activity.type === 'commit' && (
                <svg className="h-5 w-5 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
              )}
              {activity.type === 'pr' && (
                <svg className="h-5 w-5 text-purple-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4" />
                </svg>
              )}
              {activity.type === 'issue' && (
                <svg className="h-5 w-5 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              )}
              {activity.type === 'review' && (
                <svg className="h-5 w-5 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                </svg>
              )}
            </div>
            <div>
              <p className="text-sm font-medium text-gray-900 dark:text-white">
                {activity.type === 'commit' && 'New commit to '}
                {activity.type === 'pr' && 'Pull request in '}
                {activity.type === 'issue' && 'Issue opened in '}
                {activity.type === 'review' && 'Code review in '}
                <span className="font-semibold">{activity.repo}</span>
              </p>
              <p className="text-xs text-gray-500 dark:text-gray-400">{activity.time}</p>
            </div>
          </div>
        ))}
      </div>
      
      <button className="w-full text-sm text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300">
        View all activity
      </button>
    </div>
  );
}

// Notifications Component for the right panel
function Notifications() {
  return (
    <div className="space-y-4">
      <h3 className="text-lg font-medium text-gray-900 dark:text-white">Notifications</h3>
      
      <div className="space-y-3">
        {[
          { type: 'alert', title: 'High burnout risk detected', time: '1 hour ago', priority: 'high' },
          { type: 'info', title: 'Weekly report available', time: '1 day ago', priority: 'medium' },
          { type: 'success', title: 'All tests passing', time: '2 days ago', priority: 'low' },
        ].map((notification, index) => (
          <div 
            key={index}
            className={`flex items-start p-3 rounded-md border ${
              notification.priority === 'high' 
                ? 'bg-red-50 border-red-200 dark:bg-red-900/20 dark:border-red-800' 
                : notification.priority === 'medium'
                ? 'bg-yellow-50 border-yellow-200 dark:bg-yellow-900/20 dark:border-yellow-800'
                : 'bg-green-50 border-green-200 dark:bg-green-900/20 dark:border-green-800'
            }`}
          >
            <div className="mr-3 mt-0.5">
              {notification.priority === 'high' && (
                <svg className="h-5 w-5 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                </svg>
              )}
              {notification.priority === 'medium' && (
                <svg className="h-5 w-5 text-yellow-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              )}
              {notification.priority === 'low' && (
                <svg className="h-5 w-5 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              )}
            </div>
            <div>
              <p className="text-sm font-medium text-gray-900 dark:text-white">{notification.title}</p>
              <p className="text-xs text-gray-500 dark:text-gray-400">{notification.time}</p>
            </div>
          </div>
        ))}
      </div>
      
      <button className="w-full text-sm text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300">
        View all notifications
      </button>
    </div>
  );
}

export default function DashboardPage() {
  const { data: session, status } = useSession();
  const router = useRouter();
  const [showWelcome, setShowWelcome] = useState(true);

  // Register keyboard shortcuts for this page
  useKeyboardShortcuts([
    {
      key: 'b',
      ctrlKey: true,
      description: 'Go to burnout radar',
      action: () => router.push('/dashboard/burnout'),
      preventDefault: true
    },
    {
      key: 'p',
      ctrlKey: true,
      description: 'Go to productivity',
      action: () => router.push('/dashboard/productivity'),
      preventDefault: true
    },
    {
      key: 't',
      ctrlKey: true,
      description: 'Go to team',
      action: () => router.push('/dashboard/team'),
      preventDefault: true
    }
  ]);

  // Handle sign out
  const handleSignOut = async () => {
    await signOut({ callbackUrl: '/' });
  };

  // Show loading state while session is loading
  if (status === 'loading') {
    return (
      <div className="flex h-screen items-center justify-center">
        <div className="text-center">
          <div className="mb-4 h-12 w-12 animate-spin rounded-full border-4 border-blue-200 border-t-blue-600"></div>
          <p className="text-lg font-medium text-gray-700 dark:text-gray-300">Loading...</p>
        </div>
      </div>
    );
  }

  return (
    <UnifiedNavigation user={session?.user}>
      <MultiColumnLayout
        sidebar={<RecentActivity />}
        rightPanel={<Notifications />}
        sidebarWidth="280px"
        rightPanelWidth="300px"
        collapsible={true}
      >
        <div className="space-y-6 p-4 md:p-6">
          {/* Welcome Card */}
          {showWelcome && (
            <DashboardCard
              title="Welcome to DevPulse"
              subtitle="Your development analytics dashboard"
              collapsible={true}
              actions={
                <button
                  onClick={() => setShowWelcome(false)}
                  className="p-1 rounded-full text-gray-400 hover:text-gray-500 dark:hover:text-gray-300 focus:outline-none"
                  aria-label="Dismiss"
                >
                  <svg className="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </button>
              }
            >
              <p className="text-sm text-gray-600 dark:text-gray-300">
                Hello, {session?.user?.name || 'Developer'}! Your development analytics dashboard is ready.
                Use keyboard shortcut <kbd className="px-2 py-1 rounded bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 font-mono text-xs">?</kbd> to view all available shortcuts.
              </p>
            </DashboardCard>
          )}

          {/* Metrics Cards */}
          <ResponsiveGrid columns={{ xs: 1, sm: 2, lg: 3 }} gap={6}>
            {/* Burnout Risk Card */}
            <DashboardCard
              title="Burnout Radar"
              subtitle="Monitor your burnout risk"
              icon={
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className="h-5 w-5"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M13 10V3L4 14h7v7l9-11h-7z"
                  />
                </svg>
              }
              footer={
                <button
                  className="w-full rounded-md bg-blue-600 px-4 py-2 text-sm font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
                  onClick={() => router.push('/dashboard/burnout')}
                >
                  View Details
                </button>
              }
            >
              <div className="mt-4 text-center">
                <div className="text-3xl font-bold text-yellow-500">65</div>
                <div className="text-sm text-gray-500 dark:text-gray-400">Moderate Risk</div>
              </div>
            </DashboardCard>

            {/* Productivity Card */}
            <DashboardCard
              title="Productivity"
              subtitle="Track your coding patterns"
              icon={
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className="h-5 w-5"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"
                  />
                </svg>
              }
              footer={
                <button
                  className="w-full rounded-md bg-blue-600 px-4 py-2 text-sm font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
                  onClick={() => router.push('/dashboard/productivity')}
                >
                  View Details
                </button>
              }
            >
              <div className="mt-4">
                <div className="flex justify-between mb-2">
                  <span className="text-sm text-gray-500 dark:text-gray-400">Commits</span>
                  <span className="text-sm font-medium text-gray-900 dark:text-white">24</span>
                </div>
                <div className="flex justify-between mb-2">
                  <span className="text-sm text-gray-500 dark:text-gray-400">PRs</span>
                  <span className="text-sm font-medium text-gray-900 dark:text-white">8</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-sm text-gray-500 dark:text-gray-400">Code Quality</span>
                  <span className="text-sm font-medium text-gray-900 dark:text-white">78/100</span>
                </div>
              </div>
            </DashboardCard>

            {/* Team Card */}
            <DashboardCard
              title="Team"
              subtitle="Analyze team collaboration"
              icon={
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className="h-5 w-5"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"
                  />
                </svg>
              }
              footer={
                <button
                  className="w-full rounded-md bg-blue-600 px-4 py-2 text-sm font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
                  onClick={() => router.push('/dashboard/team')}
                >
                  View Details
                </button>
              }
            >
              <div className="mt-4 text-center">
                <div className="text-3xl font-bold text-purple-500">8</div>
                <div className="text-sm text-gray-500 dark:text-gray-400">Team Members</div>
              </div>
            </DashboardCard>
          </ResponsiveGrid>

          {/* Quick Actions Section */}
          <DashboardCard title="Quick Actions">
            <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
              <button
                className="flex flex-col items-center justify-center p-3 rounded-md bg-gray-50 hover:bg-gray-100 dark:bg-gray-700 dark:hover:bg-gray-600 transition-colors"
                onClick={() => router.push('/dashboard/repositories/sync')}
              >
                <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 text-blue-500 mb-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                </svg>
                <span className="text-sm text-gray-700 dark:text-gray-300">Sync Repos</span>
              </button>
              <button
                className="flex flex-col items-center justify-center p-3 rounded-md bg-gray-50 hover:bg-gray-100 dark:bg-gray-700 dark:hover:bg-gray-600 transition-colors"
                onClick={() => router.push('/dashboard/retrospective/new')}
              >
                <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 text-green-500 mb-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                </svg>
                <span className="text-sm text-gray-700 dark:text-gray-300">New Retro</span>
              </button>
              <button
                className="flex flex-col items-center justify-center p-3 rounded-md bg-gray-50 hover:bg-gray-100 dark:bg-gray-700 dark:hover:bg-gray-600 transition-colors"
                onClick={() => router.push('/dashboard/repositories')}
              >
                <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 text-purple-500 mb-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z" />
                </svg>
                <span className="text-sm text-gray-700 dark:text-gray-300">Repositories</span>
              </button>
              <button
                className="flex flex-col items-center justify-center p-3 rounded-md bg-gray-50 hover:bg-gray-100 dark:bg-gray-700 dark:hover:bg-gray-600 transition-colors"
                onClick={() => router.push('/profile')}
              >
                <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 text-yellow-500 mb-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                </svg>
                <span className="text-sm text-gray-700 dark:text-gray-300">Profile</span>
              </button>
            </div>
          </DashboardCard>

          {/* Account Information */}
          <DashboardCard 
            title="Account Information"
            footer={
              <button
                onClick={handleSignOut}
                className="rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600"
              >
                Sign Out
              </button>
            }
          >
            <div className="mt-4 space-y-2">
              <div className="flex flex-col md:flex-row md:items-center">
                <span className="w-full md:w-24 text-sm font-medium text-gray-500 dark:text-gray-400">Name:</span>
                <span className="text-sm text-gray-900 dark:text-white">{session?.user?.name || 'Not provided'}</span>
              </div>
              <div className="flex flex-col md:flex-row md:items-center">
                <span className="w-full md:w-24 text-sm font-medium text-gray-500 dark:text-gray-400">Email:</span>
                <span className="text-sm text-gray-900 dark:text-white">{session?.user?.email || 'Not provided'}</span>
              </div>
              <div className="flex flex-col md:flex-row md:items-center">
                <span className="w-full md:w-24 text-sm font-medium text-gray-500 dark:text-gray-400">GitHub:</span>
                <span className="text-sm text-gray-900 dark:text-white">Connected</span>
              </div>
            </div>
          </DashboardCard>
        </div>
      </MultiColumnLayout>
    </UnifiedNavigation>
  );
}